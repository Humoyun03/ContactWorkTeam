package uz.gita.contactworkteam.presenter.screens.addimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.Boximport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxSizeimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.heightimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.text.KeyboardOptionsimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.ArrowBackimport androidx.compose.material.icons.filled.Checkimport androidx.compose.material3.Dividerimport androidx.compose.material3.ExperimentalMaterial3Apiimport androidx.compose.material3.Iconimport androidx.compose.material3.IconButtonimport androidx.compose.material3.OutlinedTextFieldimport androidx.compose.material3.Textimport androidx.compose.material3.TopAppBarimport androidx.compose.runtime.Composableimport androidx.compose.runtime.getValueimport androidx.compose.runtime.mutableStateOfimport androidx.compose.runtime.rememberimport androidx.compose.runtime.setValueimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.text.TextStyleimport androidx.compose.ui.text.font.FontWeightimport androidx.compose.ui.text.input.KeyboardTypeimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport androidx.compose.ui.unit.spimport cafe.adriel.voyager.androidx.AndroidScreenimport cafe.adriel.voyager.hilt.getViewModelimport uz.gita.contactworkteam.ui.theme.ContactWorkTeamThemeclass AddScreen : AndroidScreen() {    @Composable    override fun Content() {        ContactWorkTeamTheme {            val viewModel: AddContract.ViewModel = getViewModel<AddViewModel>()            AddScreenContent(viewModel::onEventDispatcher)        }    }}@OptIn(ExperimentalMaterial3Api::class)@Composablefun AddScreenContent(    onEventDispatcher: (AddContract.Intent) -> Unit = {},) {    Box(modifier = Modifier.fillMaxSize()) {        Column(            modifier = Modifier                .fillMaxSize()                .align(Alignment.Center)        ) {            var firstName by remember { mutableStateOf("") }            var lastName by remember { mutableStateOf("") }            var phone by remember { mutableStateOf("+998") }            TopAppBar(                title = {                    Text(                        text = "   Add",                        style = TextStyle(                            fontSize = 20.sp,                            fontWeight = FontWeight(500),                            color = Color(0xFF000000),                        )                    )                },                navigationIcon = {                    Icon(                        imageVector = Icons.Default.ArrowBack,                        contentDescription = null,                        modifier = Modifier.clickable { onEventDispatcher.invoke(AddContract.Intent.Back) }                    )                },                actions = {                    IconButton(                        onClick = {                            onEventDispatcher.invoke(                                AddContract.Intent.AddContact(                                    firstName,                                    lastName,                                    phone                                )                            )                        }                    ) {                        Icon(imageVector = Icons.Default.Check, contentDescription = null)                    }                },                modifier = Modifier.padding(horizontal = 10.dp)            )            Divider(                modifier = Modifier                    .fillMaxWidth()                    .height(1.dp)            )            Spacer(modifier = Modifier.height(16.dp))            OutlinedTextField(                value = firstName,                onValueChange = { if (it.length <= 10) firstName = it },                label = { Text("Name") },                modifier = Modifier                    .padding(horizontal = 16.dp)                    .fillMaxWidth()            )            Spacer(modifier = Modifier.height(16.dp))            OutlinedTextField(                value = lastName,                onValueChange = { if (it.length <= 10) lastName = it },                label = { Text("Surname") },                modifier = Modifier                    .padding(horizontal = 16.dp)                    .fillMaxWidth()            )            Spacer(modifier = Modifier.height(16.dp))            OutlinedTextField(                value = phone,                onValueChange = {                    if (it.length < 14)                        phone = it                },                label = { Text("Phone") },                keyboardOptions = KeyboardOptions.Default.copy(keyboardType = KeyboardType.Phone),                modifier = Modifier                    .padding(horizontal = 16.dp)                    .fillMaxWidth()            )            Spacer(modifier = Modifier.height(32.dp))        }    }}@Composable@Preview(showBackground = true)fun AddScreenPreview() {    AddScreenContent()}