package uz.gita.contactworkteam.presenter.componentsimport android.util.Logimport androidx.compose.foundation.backgroundimport androidx.compose.foundation.borderimport androidx.compose.foundation.clickableimport androidx.compose.foundation.layout.Columnimport androidx.compose.foundation.layout.Rowimport androidx.compose.foundation.layout.Spacerimport androidx.compose.foundation.layout.fillMaxWidthimport androidx.compose.foundation.layout.paddingimport androidx.compose.foundation.layout.widthimport androidx.compose.material.icons.Iconsimport androidx.compose.material.icons.filled.Deleteimport androidx.compose.material.icons.filled.Editimport androidx.compose.material3.Iconimport androidx.compose.material3.IconButtonimport androidx.compose.material3.MaterialThemeimport androidx.compose.material3.Textimport androidx.compose.runtime.Composableimport androidx.compose.ui.Alignmentimport androidx.compose.ui.Modifierimport androidx.compose.ui.graphics.Colorimport androidx.compose.ui.tooling.preview.Previewimport androidx.compose.ui.unit.dpimport uz.gita.contactworkteam.domain.models.ContactParam@Composablefun ContactItem(    contactParam: ContactParam,    onDeleteClick: (ContactParam) -> Unit = {},    onEditClick: (ContactParam) -> Unit = {},) {    Row(        modifier = Modifier            .fillMaxWidth()            .padding(8.dp)            .border(                width = 1.dp,                color = Color.LightGray,                shape = MaterialTheme.shapes.small            )            .background(MaterialTheme.colorScheme.background)            .clickable { /* Handle click action */ }            .padding(16.dp)    ) {        Spacer(modifier = Modifier.width(16.dp))        Column(            modifier = Modifier                .weight(1f)                .align(Alignment.CenterVertically)        ) {            Row {                Text(                    text = contactParam.firstName,                )                Spacer(modifier = Modifier.width(5.dp))                Text(                    text = contactParam.lastName,                )            }            Text(                text = contactParam.phone,                color = MaterialTheme.colorScheme.primary            )        }        Row {            IconButton(                onClick = { onEditClick(contactParam) }            ) {                Icon(                    imageVector = Icons.Default.Edit,                    contentDescription = "Edit",                    tint = Color.Gray                )            }            IconButton(                onClick = {                    Log.d("TTT", "ContactItem: ")                    onDeleteClick(contactParam) }            ) {                Icon(                    imageVector = Icons.Default.Delete,                    contentDescription = "Delete",                    tint = Color.Gray                )            }        }    }}@Composable@Preview(showBackground = true)fun ContactItemPreview() {    ContactItem(contactParam = ContactParam(1,"User", "Userov", "+99899XXXXXXX"))}